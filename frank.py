import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import pymysql.cursors
from datetime import datetime


token = ""
bot= telebot.TeleBot(token)
restaurants = ["–†–û–ñ–î–ï–°–¢–í–ï–ù–ö–ê, 5/7" , "–¢–ò–ú–£–†–ê –§–†–£–ù–ó–ï, 22" , "–ú–Ø–°–ù–ò–¶–ö–ê–Ø, 24" , "–ü–Ø–¢–ù–ò–¶–ö–ê–Ø, 10" , "–ù–û–í–´–ô –ê–†–ë–ê–¢, 17" , "–ö–ê–ú–ï–†–ì–ï–†–°–ö–ò–ô –ü–ï–†., 6" , "–£–°–ê–ß–ï–í–ê, 26" , "–¢–†–ö –ü–ê–í–ï–õ–ï–¶–ö–ê–Ø –ü–õ–ê–ó–ê" , "–ë–û–õ–¨–®–ê–Ø –ù–û–í–û–î–ú–ò–¢–†–û–í–°–ö–ê–Ø, 36 –°14" , "–õ–ï–°–ù–ê–Ø –£–õ., 20, –°–¢. 6"]
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
    btn1 = types.KeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫")
    btn2 = types.KeyboardButton("–ú–ï–ù–Æ ü•©")
    btn3 = types.KeyboardButton("–ù–ê–®–ò –†–ï–°–¢–û–†–ê–ù–´üç¥")
    btn4 = types.KeyboardButton("–ù–ê–® –°–ê–ô–¢üåê")
    btn5 = types.KeyboardButton("üî•–ê–ö–¶–ò–òüî•")
    btn6 = types.KeyboardButton("–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏")
    markup.add(btn1)
    markup.add(btn2,btn3)
    markup.add(btn4,btn5)
    markup.add(btn6)

    bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}! üëã \n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ Frank By –ë–∞—Å—Ç–∞ –ú–æ—Å–∫–≤–∞!".format(message.from_user), reply_markup=markup)
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é!", reply_markup=markup)

def main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
    btn1 = types.KeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫")
    btn2 = types.KeyboardButton("–ú–ï–ù–Æ ü•©")
    btn3 = types.KeyboardButton("–ù–ê–®–ò –†–ï–°–¢–û–†–ê–ù–´üç¥")
    btn4 = types.KeyboardButton("–ù–ê–® –°–ê–ô–¢üåê")
    btn5 = types.KeyboardButton("üî•–ê–ö–¶–ò–òüî•")
    btn6 = types.KeyboardButton("–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏")
    markup.add(btn1)
    markup.add(btn2,btn3)
    markup.add(btn4,btn5)
    markup.add(btn6)
    bot.send_message(message.chat.id,text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é! –í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é.", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫"):
        bron(message)
    
    elif (message.text == "–ú–ï–ù–Æ ü•©"):
        markup = InlineKeyboardMarkup()
        telebot.types.ReplyKeyboardRemove
        
        markup.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='rollback'))
        menuosn = InlineKeyboardButton(text='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', url = 'https://frankmeat.ru/menu')
        menubar = InlineKeyboardButton(text='–ë–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞', url = 'https://frankmeat.ru/menu-bar')
        markup.add(menuosn,menubar)
        bot.send_message(message.chat.id, text="–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω—é, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.",reply_markup=markup)
    elif (message.text == "–ù–ê–®–ò –†–ï–°–¢–û–†–ê–ù–´üç¥"):
        markup = InlineKeyboardMarkup()
        telebot.types.ReplyKeyboardRemove
        markup.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='rollback'))
        bot.send_message(message.chat.id, text ="–†–û–ñ–î–ï–°–¢–í–ï–ù–ö–ê, 5/7\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî01.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00\n\n–¢–ò–ú–£–†–ê –§–†–£–ù–ó–ï, 22\nüï∞Ô∏è –ü–Ω-–í—Å 12:00-23:00\n\n–ú–Ø–°–ù–ò–¶–ö–ê–Ø, 24\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî01.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00\n\n–ü–Ø–¢–ù–ò–¶–ö–ê–Ø, 10\nüï∞Ô∏è –í—Å-—Å—Ä 12.00‚Äî00.00\nüï∞Ô∏è –ß—Ç 12.00‚Äî01.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00\n\n–ù–û–í–´–ô –ê–†–ë–ê–¢, 17\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî01.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00\n\n–ö–ê–ú–ï–†–ì–ï–†–°–ö–ò–ô –ü–ï–†., 6\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî00.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00\n\n–£–°–ê–ß–ï–í–ê, 26\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî23.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî00.00\n\n–¢–†–ö –ü–ê–í–ï–õ–ï–¶–ö–ê–Ø –ü–õ–ê–ó–ê\nüï∞Ô∏è –ü–Ω-–≤—Å 10.00‚Äî23.00\n\n–ë–û–õ–¨–®–ê–Ø –ù–û–í–û–î–ú–ò–¢–†–û–í–°–ö–ê–Ø, 36 –°14\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî00.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00\n\n–õ–ï–°–ù–ê–Ø –£–õ., 20, –°–¢. 6\nüï∞Ô∏è –í—Å-—á—Ç 12.00‚Äî01.00\nüï∞Ô∏è –ü—Ç-—Å–± 12.00‚Äî03.00 ",reply_markup=markup)
    elif (message.text == "–ù–ê–® –°–ê–ô–¢üåê"):
        markup = InlineKeyboardMarkup()
        telebot.types.ReplyKeyboardRemove
        markup.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='rollback'))
        bot.send_message(message.chat.id, text = '–°–ê–ô–¢üåê\nhttps://frankmeat.ru',reply_markup=markup)
    elif (message.text == "üî•–ê–ö–¶–ò–òüî•"):
        markup = InlineKeyboardMarkup()
        telebot.types.ReplyKeyboardRemove
        markup.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='rollback'))
        bot.send_message(message.chat.id,text='üî•üî•üî•–ù–∞—à–∏ –∞–∫—Ü–∏–∏üî•üî•üî•\n\nüéâüéâüéâ–í –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Å–∫–∏–¥–∫–∞ 10%! –î–µ–π—Å—Ç–≤—É–µ—Ç –∑–∞ 3 –¥–Ω—è –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è, –≤ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –µ—â—ë 3 –¥–Ω—è –ø–æ—Å–ª–µ. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –≤—Å—ë –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∏ –±–∞—Ä–Ω—É—é –∫–∞—Ä—Ç—É!\n\nüç≥üç≥üç≥–°—ã—Ç–Ω—ã–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 10:00 –¥–æ 12:00!\n',reply_markup=markup)
    elif (message.text == "–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏"):
        markup = InlineKeyboardMarkup()
        telebot.types.ReplyKeyboardRemove
        markup.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='rollback'))
        vk = InlineKeyboardButton(text='VK', url = 'https://vk.com/frankbybasta')
        tg = InlineKeyboardButton(text='Telegram', url = 'https://t.me/frankbybastamoscow')
        markup.add(vk,tg)
        bot.send_message(message.chat.id, text='–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –ø–µ—Ä–≤—ã–º–∏ –æ –Ω–æ–≤—ã—Ö –∞–∫—Ü–∏—è—Ö, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –Ω–æ–≤–æ—Å—Ç—è—Ö!',reply_markup=markup)
def bron(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True,row_width=2)
    caf1 = types.KeyboardButton("–†–û–ñ–î–ï–°–¢–í–ï–ù–ö–ê, 5/7")
    caf2 = types.KeyboardButton("–¢–ò–ú–£–†–ê –§–†–£–ù–ó–ï, 22")
    caf3 = types.KeyboardButton("–ú–Ø–°–ù–ò–¶–ö–ê–Ø, 24")
    caf4 = types.KeyboardButton("–ü–Ø–¢–ù–ò–¶–ö–ê–Ø, 10")
    caf5 = types.KeyboardButton("–ù–û–í–´–ô –ê–†–ë–ê–¢, 17")
    caf6 = types.KeyboardButton("–ö–ê–ú–ï–†–ì–ï–†–°–ö–ò–ô –ü–ï–†., 6")
    caf7 = types.KeyboardButton("–£–°–ê–ß–ï–í–ê, 26")
    caf8 = types.KeyboardButton("–¢–†–ö –ü–ê–í–ï–õ–ï–¶–ö–ê–Ø –ü–õ–ê–ó–ê")
    caf9 = types.KeyboardButton("–ë–û–õ–¨–®–ê–Ø –ù–û–í–û–î–ú–ò–¢–†–û–í–°–ö–ê–Ø, 36 –°14")
    caf10 = types.KeyboardButton("–õ–ï–°–ù–ê–Ø –£–õ., 20, –°–¢. 6")
    markup.add(caf1,caf2,caf3,caf4,caf5,caf6,caf7,caf8,caf9,caf10)
    bot.send_video(message.chat.id,'https://adindex.ru/files2/news/2015_11/129800_1353.gif', None , caption='–í—ã–±–µ—Ä–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–µ–ª–∞–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫.',reply_markup=markup)
    bot.register_next_step_handler(message,get_rest)
def get_rest(message):
    global rest
    rest = message.text.strip()
    if rest not in restaurants:
        bot.send_message(message.from_user.id, text = "–¢–∞–∫–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ!\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É!\n" + "\n".join(restaurants))
        bot.register_next_step_handler(message,get_rest)
    else:
        telebot.types.ReplyKeyboardRemove
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, '–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?',reply_markup=markup)
        bot.register_next_step_handler(message,ask_date)    


def ask_date(message):
    global name
    name = message.text.strip()
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞–ø—Ä–∏–º–µ—Ä 31.12.2022:",reply_markup=markup)
    bot.register_next_step_handler(message, check_date)

def check_date(message):
    global date

    try:
        date = datetime.strptime(message.text.strip(), "%d.%m.%Y").date()
    except ValueError:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!",reply_markup=markup)
        bot.register_next_step_handler(message, check_date)
        return

    if date < datetime.now().date():
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–æ—à–µ–¥—à—É—é –¥–∞—Ç—É!",reply_markup=markup)
        bot.register_next_step_handler(message, check_date)
        return
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú, –Ω–∞–ø—Ä–∏–º–µ—Ä 20:30:",reply_markup=markup)
    bot.register_next_step_handler(message, check_time)

def check_time(message):
    global time

    try:
        time = datetime.strptime(message.text.strip(), "%H:%M").time()
    except ValueError:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!",reply_markup=markup)
        bot.register_next_step_handler(message, check_time)
        return

    now = datetime.now()
    chosen_datetime = datetime.combine(date, time)

    if chosen_datetime <= now:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è!",reply_markup=markup)
        bot.register_next_step_handler(message, check_time)
        return
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫:\n–ù–µ –±–æ–ª–µ–µ 10 —á–µ–ª–æ–≤–µ–∫.",reply_markup=markup)
    bot.register_next_step_handler(message, check_people)

def check_people(message):
    global people

    try:
        people = int(message.text)
    except ValueError:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!",reply_markup=markup)
        bot.register_next_step_handler(message, check_people)
        return
    if people > 10:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–ü—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data='rollback'))
        bot.send_message(message.from_user.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!",reply_markup=markup)
        bot.register_next_step_handler(message, check_people)
        return
    markup = InlineKeyboardMarkup()
    conf = InlineKeyboardButton(text = '–î–∞', callback_data='confirmation')
    deny = InlineKeyboardButton(text='–ù–µ—Ç', callback_data='deny')
    markup.add(conf,deny)
    bot.send_message(message.from_user.id,'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. \n–î–∞ - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n–ù–µ—Ç - –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.',reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def answer(call): 
    if call.data == "rollback":
        bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)
        bot.answer_callback_query(call.id)
        main_menu(call.message)
    elif call.data == "confirmation":
        connection = pymysql.connect(host='localhost',
        user='root',
        password='',
        database='frank',
        cursorclass=pymysql.cursors.DictCursor)
        with connection:
                    with connection.cursor() as cursor:
                        sql = "INSERT INTO `booking`(`id`,`rest`,`name`,`date`,`time`,`amount`) VALUES ('',%s,%s,%s,%s,%s)"
                        cursor.execute(sql,(rest,name,date,time,people))
                        connection.commit()
        appl = "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —Å—Ç–æ–ª–∏–∫ –Ω–∞ " + str(date) + " " + str(time) + "\n" + "–ù–∞ " + str(people) + " —á–µ–ª–æ–≤–µ–∫" + " –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –ø–æ –∞–¥—Ä–µ—Å—É " + str(rest) + "\n"
        bot.send_message(call.message.chat.id, appl)
        bot.answer_callback_query(call.id)
        main_menu(call.message)
    elif call.data == "deny":
        bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)
        bot.send_message(call.message.chat.id,"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        bot.answer_callback_query(call.id)
        main_menu(call.message)
    elif call.data == "yes":
        bot.send_message(call.message.chat.id, text = "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —Å—Ç–æ–ª–∏–∫")
        bot.answer_callback_query(call.id)
        main_menu(call.message)
    elif call.data == "no":
        bot.send_message(call.message.chat.id, text= "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        bot.answer_callback_query(call.id)
        main_menu(call.message)
bot.infinity_polling()